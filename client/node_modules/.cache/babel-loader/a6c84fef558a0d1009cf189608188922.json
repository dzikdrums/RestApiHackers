{"ast":null,"code":"var _jsxFileName = \"/Users/macus/Desktop/Rest of Projects/RestApiHackers/client/src/components/features/SeatChooser/SeatChooser.js\";\nimport React from 'react';\nimport { Button, Progress, Alert } from 'reactstrap';\nimport io from 'socket.io-client';\nimport './SeatChooser.scss';\n\nclass SeatChooser extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.socket = io.connect(process.env.NODE_ENV === 'production' ? process.env.PORT : 'http://localhost:8000/order-a-ticket');\n\n    this.isTaken = seatId => {\n      const {\n        seats,\n        chosenDay\n      } = this.props;\n      return seats.some(item => item.seat === seatId && item.day === chosenDay);\n    };\n\n    this.prepareSeat = seatId => {\n      const {\n        chosenSeat,\n        updateSeat\n      } = this.props;\n      const {\n        isTaken\n      } = this;\n      if (seatId === chosenSeat) return React.createElement(Button, {\n        key: seatId,\n        className: \"seats__seat\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, seatId);else if (isTaken(seatId)) return React.createElement(Button, {\n        key: seatId,\n        className: \"seats__seat\",\n        disabled: true,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, seatId);else return React.createElement(Button, {\n        key: seatId,\n        color: \"primary\",\n        className: \"seats__seat\",\n        outline: true,\n        onClick: e => updateSeat(e, seatId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, seatId);\n    };\n\n    this.availability = () => {\n      const {\n        seats\n      } = this.props;\n      const seatsAvailable = 50 - seats.length;\n      return `Free seats: ${seatsAvailable}/50`;\n    };\n  }\n\n  componentDidMount() {\n    const {\n      loadSeats,\n      loadSeatsData\n    } = this.props;\n    loadSeats();\n    this.socket.on('seatsUpdated', seats => loadSeatsData(seats));\n  }\n\n  render() {\n    const {\n      prepareSeat\n    } = this;\n    const {\n      requests\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Pick a seat\"), React.createElement(\"small\", {\n      id: \"pickHelp\",\n      className: \"form-text text-muted ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), \" \\u2013 seat is already taken\"), React.createElement(\"small\", {\n      id: \"pickHelpTwo\",\n      className: \"form-text text-muted ml-2 mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Button, {\n      outline: true,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), \" \\u2013 it's empty\"), requests['LOAD_SEATS'] && requests['LOAD_SEATS'].success && React.createElement(\"div\", {\n      className: \"seats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, [...Array(50)].map((x, i) => prepareSeat(i + 1))), requests['LOAD_SEATS'] && requests['LOAD_SEATS'].pending && React.createElement(Progress, {\n      animated: true,\n      color: \"primary\",\n      value: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), requests['LOAD_SEATS'] && requests['LOAD_SEATS'].error && React.createElement(Alert, {\n      color: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Couldn't load seats...\"), React.createElement(\"p\", {\n      className: \"seats-availability\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.availability()));\n  }\n\n}\n\nexport default SeatChooser;","map":{"version":3,"sources":["/Users/macus/Desktop/Rest of Projects/RestApiHackers/client/src/components/features/SeatChooser/SeatChooser.js"],"names":["React","Button","Progress","Alert","io","SeatChooser","Component","socket","connect","process","env","NODE_ENV","PORT","isTaken","seatId","seats","chosenDay","props","some","item","seat","day","prepareSeat","chosenSeat","updateSeat","e","availability","seatsAvailable","length","componentDidMount","loadSeats","loadSeatsData","on","render","requests","success","Array","map","x","i","pending","error"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Progress, Alert } from 'reactstrap';\r\nimport io from 'socket.io-client';\r\n\r\nimport './SeatChooser.scss';\r\n\r\nclass SeatChooser extends React.Component {\r\n  \r\n  componentDidMount() {\r\n    const { loadSeats, loadSeatsData } = this.props;\r\n    loadSeats();\r\n    this.socket.on('seatsUpdated', (seats) => loadSeatsData(seats));\r\n  }\r\n\r\n  socket = io.connect((process.env.NODE_ENV === 'production') ? process.env.PORT : 'http://localhost:8000/order-a-ticket');\r\n\r\n\r\n  isTaken = (seatId) => {\r\n    const { seats, chosenDay } = this.props;\r\n\r\n    return (seats.some(item => (item.seat === seatId && item.day === chosenDay)));\r\n  }\r\n\r\n  prepareSeat = (seatId) => {\r\n    const { chosenSeat, updateSeat } = this.props;\r\n    const { isTaken } = this;\r\n\r\n    if(seatId === chosenSeat) return <Button key={seatId} className=\"seats__seat\" color=\"primary\">{seatId}</Button>;\r\n    else if(isTaken(seatId)) return <Button key={seatId} className=\"seats__seat\" disabled color=\"secondary\">{seatId}</Button>;\r\n    else return <Button key={seatId} color=\"primary\" className=\"seats__seat\" outline onClick={(e) => updateSeat(e, seatId)}>{seatId}</Button>;\r\n  }\r\n\r\n  availability = () => {\r\n    const { seats } = this.props;\r\n    const seatsAvailable = 50 - seats.length;\r\n    return `Free seats: ${seatsAvailable}/50`\r\n  };\r\n\r\n  render() {\r\n\r\n    const { prepareSeat } = this;\r\n    const { requests } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <h3>Pick a seat</h3>\r\n        <small id=\"pickHelp\" className=\"form-text text-muted ml-2\"><Button color=\"secondary\" /> â€“ seat is already taken</small>\r\n        <small id=\"pickHelpTwo\" className=\"form-text text-muted ml-2 mb-4\"><Button outline color=\"primary\" /> â€“ it's empty</small>\r\n        { (requests['LOAD_SEATS'] && requests['LOAD_SEATS'].success) && <div className=\"seats\">{[...Array(50)].map((x, i) => prepareSeat(i+1) )}</div>}\r\n        { (requests['LOAD_SEATS'] && requests['LOAD_SEATS'].pending) && <Progress animated color=\"primary\" value={50} /> }\r\n        { (requests['LOAD_SEATS'] && requests['LOAD_SEATS'].error) && <Alert color=\"warning\">Couldn't load seats...</Alert> }\r\n        <p className='seats-availability'>{this.availability()}</p>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default SeatChooser;"]},"metadata":{},"sourceType":"module"}